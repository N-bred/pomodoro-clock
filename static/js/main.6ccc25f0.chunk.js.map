{"version":3,"sources":["img/minus.svg","img/plus.svg","audio/alarm1.mp3","components/styles/AppStyles.jsx","components/styles/InputStyles.jsx","components/Button.jsx","components/Input.jsx","components/styles/ClockStyles.jsx","components/Clock.jsx","audioArray.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Main","main","_templateObject2","InputsContainer","_templateObject3","InputContainer","_templateObject4","Title","h1","_templateObject5","TitleInputContainer","h2","_templateObject6","ValidateDiv","_templateObject7","props","show","css","_templateObject8","InputSpan","span","InputStyles_templateObject","Img","img","InputStyles_templateObject2","ButtonStyled","button","Button_templateObject","big","Button_templateObject2","margin","Button_templateObject3","clock","Button_templateObject4","Input","_ref","time","addTime","substractTime","disableInputs","react_default","a","createElement","Button","onClick","disabled","src","minus","alt","plus","ClockContainer","ClockStyles_templateObject","ClockStyled","ClockStyles_templateObject2","rate","ClockStyles_templateObject3","TimeText","ClockStyles_templateObject4","Clock","start","playState","style","zIndex","audioArray","alarm1","App","_useState","useState","_useState2","Object","slicedToArray","breakTime","setBreakTime","_useState3","_useState4","sessionTime","setSessionTime","_useState5","_useState6","showValidation","setShowValidation","_useState7","_useState8","setDisableInputs","_useState9","_useState10","timer","setTimer","_useState11","_useState12","setPlayState","_useState13","_useState14","rateOfPlaying","setRateOfPlaying","useEffect","e","func","preventDefault","audioRef","audio","Audios","Math","floor","random","length","newAudio","Audio","volume","createAudio","timeOut","timeTo","cb","arguments","undefined","newTime","i","setInterval","interval","duration","seconds","minutes","concat","msToTime","setTimeout","play","clearInterval","pause","components_Input","components_Clock","window","location","reload","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ccc25f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/minus.1a566908.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.f247d9f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/alarm1.00751e6f.mp3\";","import styled, { css } from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  max-width: 120rem;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Main = styled.main`\r\n  background: #5f34af;\r\n  height: 100vh;\r\n  width: 100%;\r\n  color: #fff;\r\n`;\r\n\r\nconst InputsContainer = styled.div`\r\n  display: flex;\r\n  width: 40rem;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 10rem;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 4.5rem;\r\n  margin: 3rem 0;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst TitleInputContainer = styled.h2`\r\n  margin: 1rem 0;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst ValidateDiv = styled.div`\r\n  width: 70%;\r\n  height: 10rem;\r\n  background: #4568de;\r\n  justify-content: center;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 2.6rem;\r\n  margin: 1.5rem 0;\r\n  border-radius: 3px;\r\n  opacity: 0;\r\n  transition-property: opacity, transform, margin;\r\n  transition: 0.3s ease-out;\r\n  pointer-events: none;\r\n  transform: scale(0);\r\n  margin-bottom: -10rem;\r\n  ${props =>\r\n    props.show &&\r\n    css`\r\n      opacity: 1;\r\n      pointer-events: all;\r\n      transform: scale(1);\r\n      margin-bottom: 0;\r\n    `};\r\n`;\r\n\r\nexport {\r\n  Container,\r\n  Main,\r\n  InputsContainer,\r\n  InputContainer,\r\n  Title,\r\n  TitleInputContainer,\r\n  ValidateDiv\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst InputSpan = styled.span`\r\n  height: 4rem;\r\n  width: 4rem;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nexport { InputSpan, Img };\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst ButtonStyled = styled.button`\r\n  color: #eaeaea;\r\n  border: 2px solid currentColor;\r\n  background: transparent;\r\n  border-radius: 3px;\r\n  padding: 1rem 2rem;\r\n  text-transform: capitalize;\r\n  font-family: inherit;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition-property: background, box-shadow;\r\n  transition: 0.3s ease-in-out;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0.3rem 1rem rgba(255, 255, 255, 0.4);\r\n    background: rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  &:disabled {\r\n      background: rgba(92,103,107,.8);\r\n  }\r\n\r\n  ${props =>\r\n    props.big &&\r\n    css`\r\n      display: inline-flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding: 0.5rem;\r\n      font-size: 3rem;\r\n      height: 4rem;\r\n      width: 4rem;\r\n      vertical-align: top;\r\n    `}\r\n\r\n  ${props =>\r\n    props.margin &&\r\n    css`\r\n      margin: 5rem 0 0;\r\n    `}\r\n\r\n  ${props =>\r\n    props.clock &&\r\n    css`\r\n      position: absolute;\r\n      bottom: 10%;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    `}\r\n`;\r\nexport default ButtonStyled;\r\n","import React from 'react';\r\nimport { Img, InputSpan } from './styles/InputStyles';\r\nimport Button from './Button';\r\nimport minus from '../img/minus.svg';\r\nimport plus from '../img/plus.svg';\r\n\r\nconst Input = ({ time, addTime, substractTime, disableInputs }) => (\r\n  <form>\r\n    <Button big onClick={substractTime} disabled={disableInputs}>\r\n      <Img src={minus} alt=\"Substract sign\" />\r\n    </Button>\r\n    <InputSpan>{time}</InputSpan>\r\n    <Button big onClick={addTime} disabled={disableInputs}>\r\n      <Img src={plus} alt=\"Add Sign\" />\r\n    </Button>\r\n  </form>\r\n);\r\n\r\nexport default Input;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst ClockContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ClockStyled = styled.div`\r\n  height: 30rem;\r\n  width: 30rem;\r\n  border-radius: 50%;\r\n  border: 1px solid #fff;\r\n  margin: 2rem 0;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    z-index: 10;\r\n    transition-property: transform, clip-path;\r\n    transition: 0.3s linear;\r\n    clip-path: polygon(50% 50%, 0 45%, 0 50%);\r\n\r\n    ${props =>\r\n      props.rate &&\r\n      css`\r\n        transform: scale(1.5) rotate(${(props.rate * 360) / 100}deg);\r\n      `}\r\n  }\r\n`;\r\n\r\nconst TimeText = styled.p`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 2.6rem;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  padding: 1rem;\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport { ClockContainer, ClockStyled, TimeText };\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport { ClockContainer, TimeText, ClockStyled } from './styles/ClockStyles';\r\n\r\nconst Clock = ({ time, start, playState, rate }) => (\r\n  <ClockContainer>\r\n    <ClockStyled rate={rate}>\r\n      <TimeText>{time}</TimeText>\r\n\r\n      <Button\r\n        onClick={start}\r\n        clock\r\n        disabled={playState}\r\n        style={{ zIndex: '100' }}\r\n      >\r\n        Start\r\n      </Button>\r\n    </ClockStyled>\r\n  </ClockContainer>\r\n);\r\n\r\nexport default Clock;\r\n","import alarm1 from './audio/alarm1.mp3';\r\n\r\nexport default [alarm1];\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  ValidateDiv,\r\n  TitleInputContainer,\r\n  Title,\r\n  Main,\r\n  InputsContainer,\r\n  InputContainer\r\n} from './components/styles/AppStyles';\r\nimport Input from './components/Input';\r\nimport Clock from './components/Clock';\r\nimport Button from './components/Button';\r\nimport Audios from './audioArray';\r\n\r\nconst App = () => {\r\n  let [breakTime, setBreakTime] = useState(0);\r\n  let [sessionTime, setSessionTime] = useState(0);\r\n  let [showValidation, setShowValidation] = useState(false);\r\n  let [disableInputs, setDisableInputs] = useState(false);\r\n  let [timer, setTimer] = useState('00:00');\r\n  let [playState, setPlayState] = useState(true);\r\n  let [rateOfPlaying, setRateOfPlaying] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (breakTime < 0 || sessionTime < 0) {\r\n      setShowValidation(true);\r\n      setPlayState(true);\r\n    } else {\r\n      setShowValidation(false);\r\n      setPlayState(false);\r\n    }\r\n  }, [breakTime, sessionTime]);\r\n\r\n  useEffect(() => {\r\n    setPlayState(true);\r\n  }, []);\r\n\r\n  const addTime = (e, func, time) => {\r\n    e.preventDefault();\r\n    func((time += 1));\r\n  };\r\n  const substractTime = (e, func, time) => {\r\n    e.preventDefault();\r\n    func((time -= 1));\r\n  };\r\n\r\n  const msToTime = duration => {\r\n    let seconds = Math.floor((duration / 1000) % 60);\r\n    let minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n    seconds = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n    return `${minutes}:${seconds}`;\r\n  };\r\n\r\n  const createAudio = () => {\r\n    const audio = Audios[Math.floor(Math.random() * Audios.length)];\r\n    const newAudio = new Audio(audio);\r\n    newAudio.volume = 0.1;\r\n    return newAudio;\r\n  };\r\n\r\n  const audioRef = createAudio();\r\n\r\n  const playAudio = () => {\r\n    audioRef.play();\r\n    setPlayState(true);\r\n  };\r\n\r\n  const stopAudio = () => {\r\n    audioRef.pause();\r\n    setPlayState(false);\r\n  };\r\n\r\n  const timeOut = (timeTo, cb = null) => {\r\n    setPlayState(true);\r\n    let newTime = timeTo * 60000;\r\n    const percent = newTime / 100;\r\n    let i = 0;\r\n\r\n    const rate = setInterval(() => {\r\n      i++;\r\n      setRateOfPlaying(i);\r\n    }, percent);\r\n\r\n    const interval = setInterval(() => {\r\n      setTimer(msToTime((newTime -= 1000)));\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      playAudio();\r\n      clearInterval(interval);\r\n      clearInterval(rate);\r\n      setDisableInputs(false);\r\n\r\n      setTimeout(() => {\r\n        stopAudio();\r\n        setPlayState(false);\r\n\r\n        if (cb) {\r\n          cb();\r\n        }\r\n      }, 2000);\r\n    }, newTime);\r\n  };\r\n\r\n  const start = () => {\r\n    setDisableInputs(true);\r\n    timeOut(sessionTime, () => {\r\n      setDisableInputs(true);\r\n      timeOut(breakTime);\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Main>\r\n      <Container>\r\n        <Title>Pomodoro Timer</Title>\r\n\r\n        <InputsContainer>\r\n          <InputContainer>\r\n            <TitleInputContainer>Breaktime</TitleInputContainer>\r\n\r\n            <Input\r\n              addTime={e => addTime(e, setBreakTime, breakTime)}\r\n              substractTime={e => substractTime(e, setBreakTime, breakTime)}\r\n              time={breakTime}\r\n              disableInputs={disableInputs}\r\n            />\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n            <TitleInputContainer>Session Time</TitleInputContainer>\r\n            <Input\r\n              addTime={e => addTime(e, setSessionTime, sessionTime)}\r\n              substractTime={e => substractTime(e, setSessionTime, sessionTime)}\r\n              time={sessionTime}\r\n              disableInputs={disableInputs}\r\n            />\r\n          </InputContainer>\r\n        </InputsContainer>\r\n\r\n        <ValidateDiv show={showValidation}>\r\n          You can't susbtract time!\r\n        </ValidateDiv>\r\n\r\n        <Clock\r\n          time={timer}\r\n          start={start}\r\n          playState={playState}\r\n          rate={rateOfPlaying}\r\n        />\r\n\r\n        <Button onClick={reset}>Reset</Button>\r\n      </Container>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}